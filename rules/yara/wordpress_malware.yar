/*
    Collection of YARA rules for detecting WordPress malware
*/

rule WP_Backdoor_Shell {
    meta:
        description = "Detects PHP shells commonly found in WordPress installations"
        author = "Codeium Security"
        severity = "critical"
        
    strings:
        $shell1 = "eval(base64_decode(" nocase
        $shell2 = "shell_exec(" nocase
        $shell3 = "passthru(" nocase
        $shell4 = "system(" nocase
        $shell5 = "exec(" nocase
        $shell6 = "popen(" nocase
        $shell7 = "proc_open(" nocase
        $shell8 = "pcntl_exec(" nocase
        
        $base64_long = /[A-Za-z0-9+\/]{50,}={0,2}/
        $hex_encoded = /\\x[0-9A-Fa-f]{2}/
        
        $suspicious_vars = "$_POST" nocase
        $suspicious_funcs = "create_function" nocase
        
    condition:
        (any of ($shell*) and $suspicious_vars) or
        ($base64_long and any of ($shell*)) or
        (3 of them)
}

rule WP_Malicious_Redirects {
    meta:
        description = "Detects malicious redirects in WordPress files"
        author = "Codeium Security"
        severity = "high"
        
    strings:
        $redirect1 = "header('Location: http" nocase
        $redirect2 = "wp_redirect(" nocase
        $redirect3 = "window.location" nocase
        
        $suspicious_domain1 = ".ru/" nocase
        $suspicious_domain2 = ".cn/" nocase
        $suspicious_domain3 = /\.info\/[a-z0-9]{32}/
        $suspicious_domain4 = /\.biz\/[a-z0-9]{32}/
        
        $encoded_url = /\\x68\\x74\\x74\\x70/ // "http" hex encoded
        
    condition:
        (any of ($redirect*)) and
        (any of ($suspicious_domain*) or $encoded_url)
}

rule WP_Malicious_Uploads {
    meta:
        description = "Detects malicious file uploads in WordPress"
        author = "Codeium Security"
        severity = "high"
        
    strings:
        $upload1 = "move_uploaded_file(" nocase
        $upload2 = "copy(" nocase
        $upload3 = "file_put_contents(" nocase
        
        $exec1 = ".php" nocase
        $exec2 = ".phtml" nocase
        $exec3 = ".php5" nocase
        $exec4 = ".php7" nocase
        $exec5 = ".phar" nocase
        
        $suspicious = "<?php" nocase
        
    condition:
        (any of ($upload*)) and
        (any of ($exec*)) and
        $suspicious
}

rule WP_Database_Manipulation {
    meta:
        description = "Detects malicious database manipulation in WordPress"
        author = "Codeium Security"
        severity = "critical"
        
    strings:
        $wp_db1 = "$wpdb->query(" nocase
        $wp_db2 = "$wpdb->get_results(" nocase
        $wp_db3 = "mysql_query(" nocase
        $wp_db4 = "mysqli_query(" nocase
        
        $suspicious1 = "UPDATE wp_users SET user_login" nocase
        $suspicious2 = "INSERT INTO wp_users" nocase
        $suspicious3 = "UPDATE wp_options SET option_value" nocase
        $suspicious4 = "DROP TABLE" nocase
        
        $encoded = /(base64_decode|gzinflate|str_rot13)\s*\([^\)]+\)/
        
    condition:
        (any of ($wp_db*)) and
        (any of ($suspicious*) or $encoded)
}

rule WP_Malicious_Plugins {
    meta:
        description = "Detects malicious code in WordPress plugins"
        author = "Codeium Security"
        severity = "high"
        
    strings:
        $plugin_header = "Plugin Name:" nocase
        
        $suspicious1 = "add_action('wp_head'" nocase
        $suspicious2 = "add_action('init'" nocase
        $suspicious3 = "register_activation_hook(" nocase
        
        $malicious1 = "eval(" nocase
        $malicious2 = "base64_decode(" nocase
        $malicious3 = "gzinflate(" nocase
        $malicious4 = "str_rot13(" nocase
        
        $encoded_content = /[a-zA-Z0-9+\/]{50,}={0,2}/
        
    condition:
        $plugin_header and
        (any of ($suspicious*)) and
        ((any of ($malicious*)) or $encoded_content)
}

rule WP_SEO_Spam {
    meta:
        description = "Detects SEO spam in WordPress files"
        author = "Codeium Security"
        severity = "medium"
        
    strings:
        $spam1 = "<div style='display:none'>" nocase
        $spam2 = "position:absolute;left:-" nocase
        $spam3 = "text-indent:-" nocase
        
        $keyword1 = /buy\s+online/i
        $keyword2 = /cheap\s+[a-z]+/i
        $keyword3 = "casino" nocase
        $keyword4 = "viagra" nocase
        $keyword5 = "cialis" nocase
        
        $link = /<a\s+href=["'][^"']+["'][^>]*>/i
        
    condition:
        (any of ($spam*)) and
        (2 of ($keyword*)) and
        #link > 3
}

rule WP_Malicious_Javascript {
    meta:
        description = "Detects malicious JavaScript in WordPress files"
        author = "Codeium Security"
        severity = "high"
        
    strings:
        $js_eval = "eval(" nocase
        $js_doc_write = "document.write(" nocase
        $js_iframe = /<iframe\s+src=/i
        
        $encoded1 = /\\x[0-9A-Fa-f]{2}/
        $encoded2 = /\\u[0-9A-Fa-f]{4}/
        $encoded3 = /[a-zA-Z0-9+\/]{50,}={0,2}/
        
        $suspicious1 = "cryptocurrency" nocase
        $suspicious2 = "miner" nocase
        $suspicious3 = ".ru/" nocase
        $suspicious4 = ".cn/" nocase
        
    condition:
        ($js_eval or $js_doc_write or $js_iframe) and
        (any of ($encoded*)) and
        (any of ($suspicious*))
}

rule WP_Malicious_Functions {
    meta:
        description = "Detects malicious function definitions in WordPress"
        author = "Codeium Security"
        severity = "high"
        
    strings:
        $func_def = "function " nocase
        
        $suspicious1 = "base64_decode" nocase
        $suspicious2 = "gzinflate" nocase
        $suspicious3 = "str_rot13" nocase
        $suspicious4 = "eval" nocase
        
        $param1 = "$_GET" nocase
        $param2 = "$_POST" nocase
        $param3 = "$_REQUEST" nocase
        $param4 = "$_COOKIE" nocase
        
        $encoded = /[a-zA-Z0-9+\/]{50,}={0,2}/
        
    condition:
        $func_def and
        (2 of ($suspicious*)) and
        (any of ($param*)) and
        $encoded
}

rule WP_Config_Manipulation {
    meta:
        description = "Detects malicious wp-config.php manipulation"
        author = "Codeium Security"
        severity = "critical"
        
    strings:
        $wp_config = "wp-config.php"
        
        $db1 = "DB_NAME" nocase
        $db2 = "DB_USER" nocase
        $db3 = "DB_PASSWORD" nocase
        $db4 = "DB_HOST" nocase
        
        $suspicious1 = "eval(" nocase
        $suspicious2 = "base64_decode(" nocase
        $suspicious3 = "file_put_contents(" nocase
        $suspicious4 = "fwrite(" nocase
        
        $encoded = /[a-zA-Z0-9+\/]{50,}={0,2}/
        
    condition:
        $wp_config and
        (2 of ($db*)) and
        (any of ($suspicious*) or $encoded)
}

rule WP_Malicious_Uploads_Advanced {
    meta:
        description = "Detects sophisticated malicious uploads in WordPress"
        author = "Codeium Security"
        severity = "critical"
        
    strings:
        // File upload functions
        $upload1 = "move_uploaded_file"
        $upload2 = "copy"
        $upload3 = "rename"
        
        // PHP execution
        $exec1 = "<?php"
        $exec2 = "<?="
        $exec3 = "<script language='php'"
        
        // Dangerous functions
        $danger1 = "eval("
        $danger2 = "assert("
        $danger3 = "preg_replace"
        $danger4 = "create_function"
        
        // File operations
        $file1 = "fopen("
        $file2 = "file_put_contents"
        $file3 = "file_get_contents"
        
        // Encoded content
        $encoded1 = /[a-zA-Z0-9+\/]{50,}={0,2}/  // base64
        $encoded2 = /\\x[0-9A-Fa-f]{2}/          // hex
        $encoded3 = /chr\(\d+\)/                  // chr()
        
        // Network operations
        $net1 = "fsockopen"
        $net2 = "curl_exec"
        $net3 = "file_get_contents('http"
        
        // Suspicious variables
        $var1 = "$_FILES"
        $var2 = "$_POST"
        $var3 = "$_GET"
        $var4 = "$_REQUEST"
        
    condition:
        (any of ($upload*)) and
        (any of ($exec*)) and
        (
            (2 of ($danger*)) or
            (2 of ($file*) and any of ($encoded*)) or
            (any of ($net*) and any of ($var*))
        )
}

rule WP_Malicious_Core_Modification {
    meta:
        description = "Detects modifications to WordPress core files"
        author = "Codeium Security"
        severity = "critical"
        
    strings:
        // WordPress core files
        $core1 = "wp-load.php"
        $core2 = "wp-config.php"
        $core3 = "wp-settings.php"
        $core4 = "wp-blog-header.php"
        
        // Suspicious modifications
        $mod1 = "eval("
        $mod2 = "base64_decode("
        $mod3 = "create_function("
        $mod4 = "preg_replace('/[^a-z]/e'"
        
        // File operations
        $file1 = "fopen("
        $file2 = "file_put_contents"
        $file3 = "file_get_contents"
        
        // Network operations
        $net1 = "curl_exec("
        $net2 = "fsockopen("
        $net3 = "file_get_contents('http"
        
        // Encoded content
        $enc1 = /[a-zA-Z0-9+\/]{50,}={0,2}/
        $enc2 = /\\x[0-9A-Fa-f]{2}/
        
    condition:
        (any of ($core*)) and
        (
            (2 of ($mod*)) or
            (any of ($file*) and any of ($net*)) or
            (any of ($mod*) and any of ($enc*))
        )
}

rule WP_Malicious_Theme_Modification {
    meta:
        description = "Detects malicious modifications to WordPress themes"
        author = "Codeium Security"
        severity = "high"
        
    strings:
        // Theme files
        $theme1 = "style.css"
        $theme2 = "functions.php"
        $theme3 = "header.php"
        $theme4 = "footer.php"
        
        // Suspicious functions
        $func1 = "eval("
        $func2 = "base64_decode("
        $func3 = "gzinflate("
        $func4 = "str_rot13("
        
        // JavaScript injection
        $js1 = "<script"
        $js2 = "document.write("
        $js3 = "window.location"
        
        // Hidden content
        $hidden1 = "display:none"
        $hidden2 = "visibility:hidden"
        $hidden3 = "opacity:0"
        
        // Encoded content
        $enc1 = /[a-zA-Z0-9+\/]{50,}={0,2}/
        $enc2 = /\\x[0-9A-Fa-f]{2}/
        
    condition:
        (any of ($theme*)) and
        (
            (2 of ($func*)) or
            (2 of ($js*) and any of ($hidden*)) or
            (any of ($func*) and any of ($enc*))
        )
}
